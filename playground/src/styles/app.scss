@charset "utf-8";
/* @import "partials/partials"; */

.react-autosuggest__container {
  position: relative;
}

.react-autosuggest__input {
  width: 240px;
  height: 30px;
  padding: 10px 20px;
  font-family: Helvetica, sans-serif;
  font-weight: 300;
  font-size: 16px;
  border: 1px solid #aaa;
  border-radius: 2px;
}

.react-autosuggest__input:focus {
  outline: none;
}

.react-autosuggest__container--open .react-autosuggest__input {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.react-autosuggest__suggestions-container {
  display: none;
}

.react-autosuggest__container--open .react-autosuggest__suggestions-container {
  display: block;
  position: absolute;
  top: 51px;
  width: 280px;
  border: 1px solid #aaa;
  background-color: #fff;
  font-family: Helvetica, sans-serif;
  font-weight: 300;
  font-size: 16px;
  border-bottom-left-radius: 2px;
  border-bottom-right-radius: 2px;
  z-index: 2;
}

.react-autosuggest__suggestions-list {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.react-autosuggest__suggestion {
  cursor: pointer;
  padding: 10px 20px;
}

.react-autosuggest__suggestion:not(:first-child) {
  border-top: 1px solid #ddd;
}

.react-autosuggest__suggestion--focused {
  background-color: #0c7eaf;
  color: #fff;
}

.suggestion-content {
  display: flex;
  align-items: center;
  background-repeat: no-repeat;
}

.name {
  margin-left: 68px;
  line-height: 45px;
}

.highlight {
  color: #ee0000;
  font-weight: bold;
}

.react-autosuggest__suggestion--focused .highlight {
  color: #120000;
}

.phone-wrapper {
  /* background-image: url('../assets/images/phone.svg');
  background-size: 20px 20px;
  background-position: center 60%;
  background-repeat: no-repeat;
  box-sizing: border-box;
  height: 36px;
  width: 36px;
  position: absolute;
  top: 3px;
  right: 3px;
  cursor: pointer;
  transition: transform 0.2s ease;
  background-color: transparent;
  border: none;

  &:hover {
    transform: scale(1.2);
  }
  */
}

.phone-text {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
}

.modal-content {
  background-color: white;
  padding: 30px;
  border-radius: 3px;
  margin: 20px;
  position: relative;
}

.big-phone {
  font-size: 150%;
}

.close-modal {
  width: 100px;
  height: 40px;
  background-color: blue;
  color: white;
  border-radius: 3px;
  border: none;
  font-size: 110%;
  cursor: pointer;

  &:hover {
    background-color: darker-blue;
  }
}

.header-close-btn {
  width: 30px;
  height: 30px;
  font-size: 150%;
  background-color: transparent;
  border: none;
  cursor: pointer;
  position: absolute;
  top: 5px;
  right: 5px;
}

.header-close-hint {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
}

/* Nasty hack to fix the Safari <= 10 `-webkit-overflow-scrolling: touch` bug */
#react-aria-modal-dialog {
  height: calc(100% + 1px);
}



/* Signup Form style  */
$primary: #007bff;
$strength-colors: (
  darkred, orangered, orange, yellowgreen, green
);
$strength-gap: 6px;

body {
  font-size: 62.5%;
}

.main-container {
  position: relative;
  width: 400px;
  top: 100px;
  // bottom: 0;
  // left: 0;
  // right: 0;
}

.form-container {
  // bottom: 100px;
}

legend.form-label {
  font-size: 1.5rem;
  color: desaturate(darken($primary, 10%), 60%);
}

.control-label {
  font-size: 0.8rem;
  font-weight: bold;
  color: desaturate(darken($primary, 10%), 80%);
}

.form-control {
  font-size: 1rem;
}

.form-hint {
  font-size: 0.6rem;
  line-height: 1.4;
  margin: -5px auto 5px;
  color: #999;

  &.error {
    color: #c00;
    font-size: 0.8rem;
  }
}

button.btn {
  letter-spacing: 1px;
  font-size: 0.8rem;
  font-weight: 600;
}

.password-count {
  bottom: 16px;
  right: 10px;
  font-size: 1rem;
}

.strength-meter {
  position: relative;
  height: 3px;
  background: #ddd;
  margin: 7px 0;
  border-radius: 2px;

  &:before,
  &:after {
    content: "";
    height: inherit;
    background: transparent;
    display: block;
    border-color: #fff;
    border-style: solid;
    border-width: 0 $strength-gap 0;
    position: absolute;
    width: calc(20% + #{$strength-gap});
    z-index: 10;
  }

  &:before {
    left: calc(20% - #{($strength-gap / 2)});
  }

  &:after {
    right: calc(20% - #{($strength-gap / 2)});
  }
}

.strength-meter-fill {
  background: transparent;
  height: inherit;
  position: absolute;
  width: 0;
  border-radius: inherit;
  transition: width 0.5s ease-in-out, background 0.25s;

  @for $i from 1 through 5 {
    &[data-strength="#{$i - 1}"] {
      width: (20% * $i);
      background: nth($strength-colors, $i);
    }
  }
}
